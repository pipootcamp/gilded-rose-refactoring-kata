Index: test_gilded_rose.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># -*- coding: utf-8 -*-\r\nimport unittest\r\n\r\nfrom gilded_rose import Item, GildedRose\r\n\r\n\r\nclass GildedRoseTest(unittest.TestCase):\r\n    def test_foo(self):\r\n        items = [Item(\"foo\", 0, 0)]\r\n        gilded_rose = GildedRose(items)\r\n        gilded_rose.update_quality()\r\n        self.assertEqual(\"foo\", items[0].name)\r\n\r\n    def test_should_decrease_sellin_by_one(self):\r\n        items = [Item(\"foo\", 7, 1)]\r\n        gilded_rose = GildedRose(items)\r\n        gilded_rose.update_quality()\r\n        self.assertEqual(6, items[0].sell_in)\r\n\r\n    def test_should_decrease_quality_by_one(self):\r\n        items = [Item(\"foo\", 7, 1)]\r\n        gilded_rose = GildedRose(items)\r\n        gilded_rose.update_quality()\r\n        self.assertEqual(0, items[0].quality)\r\n\r\n    def test_should_decrease_double_if_sellin_lessthan_zero(self):\r\n        items = [Item(\"foo\", 0, 2)]\r\n        GildedRose(items).update_quality()\r\n        self.assertEqual(0, items[0].quality)\r\n\r\n    def test_quality_never_be_negative(self):\r\n        items = [Item(\"foo\", 4, 0)]\r\n        gilded_rose = GildedRose(items)\r\n        gilded_rose.update_quality()\r\n        self.assertEqual(0, items[0].quality)\r\n\r\n    def test_agedbries_should_increase_quality(self):\r\n        items =[Item(\"Aged Brie\", 4, 0)]\r\n        GildedRose(items).update_quality()\r\n        self.assertEqual(1, items[0].quality)\r\n\r\n    def test_quality_should_not_be_greater_than_50(self):\r\n        items = [Item(\"Aged Brie\", 7, 50)]\r\n        GildedRose(items).update_quality()\r\n        self.assertEqual(50, items[0].quality)\r\n\r\n    def test_sulfuras_should_not_decrease_in_quality(self):\r\n        items = [Item(\"Sulfuras, Hand of Ragnaros\", 7, 40)]\r\n        gilded_rose = GildedRose(items)\r\n        gilded_rose.update_quality()\r\n        self.assertEqual(40, items[0].quality)\r\n    #@unittest.skip(\"porque jose dijo\")\r\n    def test_sulfuras_should_not_decrease_in_sellin(self):\r\n        items = [Item(\"Sulfuras, Hand of Ragnaros\", 7, 50)]\r\n        gilded_rose = GildedRose(items)\r\n        gilded_rose.update_quality()\r\n        self.assertEqual(7, items[0].sell_in)\r\n\r\n    def test_backstage_passes_quality_increases_by_2_if_sell_in_less_than_10(self):\r\n        items = [Item(\"Backstage passes to a TAFKAL80ETC concert\", 9, 10)]\r\n        gilded_rose = GildedRose(items)\r\n        gilded_rose.update_quality()\r\n        self.assertEqual(12, items[0].quality)\r\n\r\n    def test_backstage_passes_quality_increases_by_3_if_sell_in_less_than_5(self):\r\n        items = [Item(\"Backstage passes to a TAFKAL80ETC concert\", 4, 10)]\r\n        gilded_rose = GildedRose(items)\r\n        gilded_rose.update_quality()\r\n        self.assertEqual(13, items[0].quality)\r\n\r\n    def test_backstage_passes_quality_decreases_to_0_if_sell_in_equals_zero(self):\r\n        items = [Item(\"Backstage passes to a TAFKAL80ETC concert\", 0, 10)]\r\n        gilded_rose = GildedRose(items)\r\n        gilded_rose.update_quality()\r\n        self.assertEqual(0, items[0].quality)\r\n\r\n\r\n\r\n        \r\nif __name__ == '__main__':\r\n    unittest.main()\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/test_gilded_rose.py b/test_gilded_rose.py
--- a/test_gilded_rose.py	
+++ b/test_gilded_rose.py	
@@ -49,6 +49,7 @@
         gilded_rose = GildedRose(items)
         gilded_rose.update_quality()
         self.assertEqual(40, items[0].quality)
+
     #@unittest.skip("porque jose dijo")
     def test_sulfuras_should_not_decrease_in_sellin(self):
         items = [Item("Sulfuras, Hand of Ragnaros", 7, 50)]
@@ -74,8 +75,5 @@
         gilded_rose.update_quality()
         self.assertEqual(0, items[0].quality)
 
-
-
-        
 if __name__ == '__main__':
     unittest.main()
